{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["images","App","React","useState","selected","selectedSet","chosen","chosenSet","style","margin","display","gridTemplateColumns","width","map","img","textAlign","src","opacity","includes","borderRadius","backgroundColor","padding","onClick","filter","i","fontSize","border","marginTop","Math","floor","random","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAGMA,G,MAAS,CACb,YACA,eACA,WACA,cACA,WACA,YACA,cAsEaC,MAnEf,WAAgB,IAAD,EACmBC,IAAMC,SAAS,CAC7C,WACA,cACA,cAJW,mBACNC,EADM,KACIC,EADJ,OAMeH,IAAMC,SAAS,MAN9B,mBAMNG,EANM,KAMEC,EANF,KAOb,OACE,sBACEC,MAAO,CACLC,OAAQ,OAFZ,UAKE,qBACED,MAAO,CACLE,QAAS,OACTC,oBAAqB,iBACrBC,MAAO,QAJX,SAOGZ,EAAOa,KAAI,SAACC,GAAD,OACV,qBACEN,MAAO,CACLO,UAAW,UAFf,SAME,qBACEC,IAAKF,EACLN,MAAO,CACLS,QAASb,EAASc,SAASJ,GAAO,EAAI,GACtCL,OAAQ,SACRU,aAAc,SACdC,gBAAiBd,IAAWQ,EAAM,YAAc,KAChDO,QAAS,UAEXC,QAAS,WACHlB,EAASc,SAASJ,GACpBT,EAAYD,EAASmB,QAAO,SAACC,GAAD,OAAOA,IAAMV,MAEzCT,EAAY,GAAD,mBAAKD,GAAL,CAAeU,SAf3BA,QAsBX,wBACEN,MAAO,CACLI,MAAO,OACPa,SAAU,WACVJ,QAAS,QACTF,aAAc,QACdO,OAAQ,EACRN,gBAAiB,QACjBO,UAAW,SAEbL,QAAS,WACPf,EAAUH,EAASwB,KAAKC,MAAMD,KAAKE,SAAW1B,EAAS2B,WAX3D,wBChDSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c0832c7b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nconst images = [\n  \"bjorn.png\",\n  \"mountain.png\",\n  \"berg.png\",\n  \"gnorman.png\",\n  \"luna.png\",\n  \"windy.png\",\n  \"jimmy.png\",\n];\n\nfunction App() {\n  const [selected, selectedSet] = React.useState([\n    \"luna.png\",\n    \"gnorman.png\",\n    \"jimmy.png\",\n  ]);\n  const [chosen, chosenSet] = React.useState(null);\n  return (\n    <div\n      style={{\n        margin: \"1em\",\n      }}\n    >\n      <div\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(2, 1fr)\",\n          width: \"100%\",\n        }}\n      >\n        {images.map((img) => (\n          <div\n            style={{\n              textAlign: \"center\",\n            }}\n            key={img}\n          >\n            <img\n              src={img}\n              style={{\n                opacity: selected.includes(img) ? 1 : 0.2,\n                margin: \"0.25em\",\n                borderRadius: \"0.25em\",\n                backgroundColor: chosen === img ? \"lightblue\" : null,\n                padding: \"0.25em\",\n              }}\n              onClick={() => {\n                if (selected.includes(img)) {\n                  selectedSet(selected.filter((i) => i !== img));\n                } else {\n                  selectedSet([...selected, img]);\n                }\n              }}\n            />\n          </div>\n        ))}\n      </div>\n      <button\n        style={{\n          width: \"100%\",\n          fontSize: \"xx-large\",\n          padding: \"0.5em\",\n          borderRadius: \"0.5em\",\n          border: 0,\n          backgroundColor: \"coral\",\n          marginTop: \"0.5em\",\n        }}\n        onClick={() => {\n          chosenSet(selected[Math.floor(Math.random() * selected.length)]);\n        }}\n      >\n        Choose\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}